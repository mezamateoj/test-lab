name: lab-test

services:
  backend:
    container_name: lab-test-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./resources:/app/resources
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - POSTGRES_DB=pokemon
      - POSTGRES_USER=ash
      - POSTGRES_PASSWORD=password123
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./resources/database_backup.sql:/docker-entrypoint-initdb.d/database_backup.sql
    environment:
      - POSTGRES_DB=pokemon
      - POSTGRES_USER=ash
      - POSTGRES_PASSWORD=password123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ash -d pokemon"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  frontend:
    container_name: lab-test-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.next
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_started
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge